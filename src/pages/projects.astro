---
import Layout from '../layouts/Layout.astro';
import { Image } from 'astro:assets';
import Footer from '../components/Footer.astro';
import chatbotImage from '../assets/chatbot.png';
import dataProjectsImage from '../assets/data-projects.jpg';
import FDImage from '../assets/FD.jpg';
import detectionImage from '../assets/detectImage.jpg';
import VERImage from '../assets/chatbotVER.png';
import choreai from '../assets/CHOREAI.gif';
import GAN from '../assets/GAN.png';
import neuralTRImage from '../assets/NeuralTR.gif';
import AzureIm from '../assets/AzurePr.png';

interface Project {
  title: string;
  description: string;
  image: ImageMetadata;
  link?: string;
  github?: string;
  technologies: string[];
}

const projects: Project[] = [
  {
    title: "Federated Learning for Healthcare",
    description: "Designed a federated learning pipeline applied to hospital data, enabling powerful AI model development for disease prediction while ensuring data privacy and security across multiple hospitals",
    image: FDImage,
    link: "https://drive.google.com/file/d/1UVXc2wnHb1Roj3v9Shk0-m6C0xF7Iacv/view",
    github: "",
    technologies: ["Python", "Azure", "PyTorch", "Federated Learning", "Healthcare AI", "Data Privacy", "TensorFlow"]
  },
  {
    title: "Age, Gender & Emotion Detection System",
    description: "Developed a real-time embedded AI solution for TotalEnergies to detect customer age, gender, and emotions from video streams. The system integrated three optimized AI models and enabled dynamic statistics generation.",
    image: detectionImage,
    github: "https://github.com/yourusername/emotion-detection",
    technologies: ["Computer Vision", "TensorFlow", "OpenCV", "Embedded Systems", "Real-time Processing", "multi-threading", "python"]
  },
  {
    title: "VERDON Company Chatbot",
    description: "Designed and implemented a custom intelligent chatbot leveraging advanced large language models (LLMs) such as LLaMA and DeepSeek. Integrated Retrieval-Augmented Generation (RAG) to provide contextualized responses based on internal company documentation, enabling accurate, domain-specific knowledge access.",
    image: VERImage,
    github: "https://github.com/yourusername/verdon-chatbot",
    technologies: ["LLM", "Llama", "DeepSeek", "RAG", "Vector Database", "NLP", "SQL"]
  },
  {
    title: "Financial Advisory Chatbot",
    description: "Intelligent chatbot based on Llama models for financial decision support, featuring secure architecture and optimized deployment",
    image: chatbotImage,
    github: "https://github.com/yourusername/finance-chatbot",
    technologies: ["LLM", "RAG", "python", "Docker", "VPS", "Security", "Financial AI"]
  },
  {
    title: "Neural Style Transfert",
    description: "Implementation of the Neural Style Transfer technique, a fascinating deep learning algorithm that combines the content of one image with the style of another image. By leveraging convolutional neural networks, this project enables you to create unique and visually appealing artworks that merge the content and style of different images.",
    image: neuralTRImage,
    github: "https://github.com/Dreys-bot/Neural-Style-Transfert",
    technologies: ["python", "VGG", "Flask"]
  },
  {
    title: "Dance Step Classifier",
    description: "Implementation of the Neural Style Transfer technique, a fascinating deep learning algorithm that combines the content of one image with the style of another image. By leveraging convolutional neural networks, this project enables you to create unique and visually appealing artworks that merge the content and style of different images.",
    image: choreai,
    github: "https://github.com/Dreys-bot/choreAI",
    technologies: ["pose estimation", "tensorflow", "pytorch", "python", "html/css", "video analysis"]
  },
  {
    title: "Generate 3D object",
    description: "Implemented a 3D object generation pipeline using a 3D VAE-GAN architecture, trained on the 3DShapeNets dataset. The model learns to generate realistic 3D voxel-based shapes by combining variational encoding and adversarial learning. More technical details are available in the attached PDF in the repository.",
    image: GAN,
    github: "https://github.com/Dreys-bot/3DVAEGAN/tree/main",
    technologies: ["GAN", "Processing 3D voxels objects", "discriminator and generator process", "python", "VAE encoder for GAN model"]
  },
  {
    title: "Data Reporting Project",
    description: "Built a data reporting pipeline on Microsoft Azure simulating a real-world workflow. Integrated on-premise data with Azure Data Factory, Data Lake Gen2, Databricks, Synapse, and Power BI. Implemented bronze-silver-gold data transformation with versioned storage and secure access via Azure Key Vault and Entra ID. Final Power BI dashboards displayed daily refreshed KPIs based on business context.",
    image:  AzureIm,
    github: "https://github.com/Dreys-bot/Azure-Data-Engineering-project",
    technologies: ["Azure Data Factory", "Azure Data Lake Gen2", "Azure Databricks", "Azure Synapse Analytics", "Power BI"]
  }
];
---

<Layout title="Projects - DJOUPE PENE Audrey">
  <main class="min-h-screen pt-20">
    <section class="py-16">
      <div class="max-w-7xl mx-auto px-8">
        <h1 class="text-4xl font-bold text-white mb-16 text-center">
          Featured Projects
          <div class="h-1 w-20 bg-purple-500 mx-auto mt-4"></div>
        </h1>

        <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
          {projects.map((project, index) => (
            <div 
              class="group bg-gray-900/50 rounded-xl overflow-hidden transform hover:scale-[1.02] transition-all duration-300 hover:shadow-2xl hover:shadow-purple-500/20"
              data-aos="fade-up"
              data-aos-delay={index * 100}
            >
              <div class="relative overflow-hidden aspect-video">
                <Image
                  src={project.image}
                  alt={project.title}
                  class="w-full h-full object-cover transform group-hover:scale-110 transition-transform duration-500"
                />
                <div class="absolute inset-0 bg-gradient-to-t from-gray-900 via-gray-900/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
              </div>

              <div class="p-6 space-y-4">
                <h3 class="text-2xl font-bold text-white group-hover:text-purple-400 transition-colors">
                  {project.title}
                </h3>
                <p class="text-gray-300 min-h-[4.5rem] hover:min-h-fit transition-all duration-300">
                  {project.description}
                </p>

                <div class="flex flex-wrap gap-2 mt-4">
                  {project.technologies.map((tech) => (
                    <span class="px-3 py-1 bg-purple-900/50 text-purple-200 rounded-full text-sm backdrop-blur-sm">
                      {tech}
                    </span>
                  ))}
                </div>

                <div class="flex gap-4 mt-6 pt-4 border-t border-gray-700">
                  {project.github && (
                    <a
                      href={project.github}
                      target="_blank"
                      rel="noopener noreferrer"
                      class="flex items-center gap-2 text-white hover:text-purple-400 transition-colors"
                    >
                      <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                      </svg>
                      View Code
                    </a>
                  )}
                  {project.link && (
                    <a
                      href={project.link}
                      target="_blank"
                      rel="noopener noreferrer"
                      class="flex items-center gap-2 text-white hover:text-purple-400 transition-colors"
                    >
                      <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"/>
                      </svg>
                      Live Demo
                    </a>
                  )}
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>
    <Footer />
  </main>
</Layout>

<script>
  // Import AOS
  import AOS from 'aos';
  import 'aos/dist/aos.css';

  // Initialize AOS
  AOS.init({
    duration: 1000,
    once: true,
    offset: 100
  });
</script>

<style>
  /* Add smooth hover effects */
  .project-card {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* Add hover lift effect */
  .project-card:hover {
    transform: translateY(-5px);
  }

  /* Gradient animation */
  @keyframes gradient {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
  }
</style> 